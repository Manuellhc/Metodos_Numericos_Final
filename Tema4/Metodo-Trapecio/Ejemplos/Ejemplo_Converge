'''
Enunciado: 
Aproximar la integral de 𝑓(𝑥)=𝑒−𝑥2 en el intervalo [0,1] usando 𝑛=100 subintervalos.


Objetivo:
Comparar con el valor real aproximado de la integral 
'''
import math

def f(x):
    return math.exp(-x**2)

# Método del trapecio para aproximar la integral de una función
def metodo_trapecio(f, a, b, n):
    h = (b - a) / n
    suma = f(a) + f(b)
    for i in range(1, n):
        suma += 2 * f(a + i * h)
    return (h / 2) * suma


resultado = metodo_trapecio(f, 0, 1, 100)
print("Aproximación:", resultado)





# Interpretación: La aproximación de la integral es cercana al valor real, lo que indica que el método del trapecio es efectivo para funciones suaves. La precisión del método depende del número de subintervalos utilizados; en este caso, 100 subintervalos proporcionan una buena aproximación.
# La precisión del método del trapecio mejora con un mayor número de subintervalos, especialmente para funciones suaves.




