'''
Considera el sistema de ecuaciones diferenciales que modela un oscilador armónico con amortiguamiento:
   
x' = v
v' = -2cwv - w^2x
x(0) = 1, v(0) = 0. Utiliza el método de Euler para aproximar la solución en el intervalo [0, 10] con un paso h=0.1.

Calcular el coeficiente de correlación.

Objetivo: 

Aplicar el método de Euler para aproximar la solución del sistema y observar su comportamiento en presencia de amortiguamiento.
'''

import numpy as np
import matplotlib.pyplot as plt

def euler_system(f, t0, tf, Y0, h):
    t_values = [t0]
    Y_values = [Y0]
    t = t0
    Y = np.array(Y0, dtype=float)
    
    while t < tf:
        Y = Y + h * np.array(f(t, Y))
        t += h
        t_values.append(t)
        Y_values.append(Y.copy())
    
    return np.array(t_values), np.array(Y_values)
def damped_oscillator(t, Y):
    x, v = Y
    omega = 1
    zeta = 0.5
    dxdt = v
    dvdt = -2 * zeta * omega * v - omega**2 * x
    return [dxdt, dvdt]

# Condiciones iniciales
t0 = 0
tf = 10
Y0 = [1, 0]
h = 0.5

t_values, Y_values = euler_system(damped_oscillator, t0, tf, Y0, h)

# Gráficas
plt.figure(figsize=(6, 5))
plt.plot(t_values, Y_values[:, 0], label='Euler x(t)', marker='o', markersize=4)
plt.title('Posición vs Tiempo (Amortiguamiento)')
plt.xlabel('Tiempo')
plt.ylabel('Posición')
plt.legend()
plt.grid(True)
plt.show()

#La gráfica muestra que la solución obtenida mediante el método de Euler diverge significativamente de la solución esperada, presentando oscilaciones crecientes en lugar de un comportamiento amortiguado.


# Interpretación:El método de Euler no es adecuado para sistemas con amortiguamiento o soluciones oscilatorias, especialmente cuando se utilizan pasos grandes. En estos casos, se recomienda utilizar métodos más avanzados, como Runge-Kutta de orden superior, que ofrecen mayor estabilidad y precisión.
