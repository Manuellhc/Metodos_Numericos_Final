'''
Enunciado:
Encontrar la ra√≠z de ùëì(ùë•)=ùë•^3‚àíùë• ‚àí2 entre [1, 2] con tolerancia de 10‚àí5  usando la regla falsa.

Objetivo:
Aplicar regla falsa para hallar una ra√≠z de la funci√≥n.

'''
def f(x):
    return x**3 - x - 2

def regla_falsa(a, b, tol):
    if f(a) * f(b) >= 0:
        return "No se garantiza ra√≠z"
    c = a
    while True:
        c = b - f(b)*(a - b)/(f(a) - f(b))
        if abs(f(c)) < tol:
            return c
        elif f(a) * f(c) < 0:
            b = c
        else:
            a = c

raiz = regla_falsa(1, 2, 1e-5)
print("Ra√≠z aproximada:", raiz)

# Interpretaci√≥n: La regla falsa permite encontrar una ra√≠z de la funci√≥n en el intervalo dado, convergiendo a un valor cercano a la ra√≠z real con la tolerancia especificada.
# La funci√≥n tiene una ra√≠z real entre 1 y 2, y la regla falsa logra aproximarla correctamente.
