'''
Enunciado:Usar ùë•0=1 y ùë•1=1 para encontrar la ra√≠z de ùëì(ùë•)=ùë•2‚àí2.

Objetivo:
Ver qu√© ocurre si se dan puntos iniciales iguales.

'''
def f(x):
    return x**2 - 2

def secante(x0, x1, tol):
    while abs(f(x1)) > tol:
        try:
            x2 = x1 - f(x1)*(x1 - x0)/(f(x1) - f(x0))
        except ZeroDivisionError:
            return "Divisi√≥n por cero"
        x0, x1 = x1, x2
    return x1

raiz = secante(1, 1, 1e-5)
print("Ra√≠z aproximada:", raiz)


# Interpretaci√≥n: Al iniciar con puntos iguales, el m√©todo de la secante no puede avanzar porque la pendiente es cero (divisi√≥n por cero).
# Esto provoca que el m√©todo no pueda encontrar una ra√≠z, ya que no hay un cambio en los puntos iniciales para calcular la siguiente aproximaci√≥n.
# La secante requiere que los puntos iniciales sean distintos para poder calcular la pendiente y avanzar hacia la ra√≠z.
# La salida indica que se ha producido una divisi√≥n por cero, lo que es un comportamiento esperado en este caso.
# La secante es un m√©todo iterativo que utiliza dos puntos iniciales para aproximar la ra√≠z de una funci√≥n.